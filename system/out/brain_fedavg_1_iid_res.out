==================================================
Algorithm: FedAvg
Local batch size: 24
Local steps: 1
Local learing rate: 0.005
Total number of clients: 100
Clients join in each round: 0.1
Client drop rate: 0.0
Time select: False
Time threthold: 10000
Global rounds: 10
Running times: 1
Dataset: brain
Local model: resnet
Using device: cuda
Cuda device id: 1
==================================================

============= Running time: 0th =============
Creating server and clients ...
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=5, bias=True)
)

Join ratio / total clients: 0.1 / 100
Finished creating server and clients.

-------------Round number: 0-------------

Evaluate global model
Averaged Train Loss: 1.6347
Averaged Test Accurancy: 0.1451
Averaged Test AUC: 0.5792
Std Test Accurancy: 0.0452
Std Test AUC: 0.0364
------------------------- time cost ------------------------- 78.36566400527954

-------------Round number: 1-------------

Evaluate global model
Averaged Train Loss: 1.3941
Averaged Test Accurancy: 0.3844
Averaged Test AUC: 0.7109
Std Test Accurancy: 0.0802
Std Test AUC: 0.0445
------------------------- time cost ------------------------- 78.2855453491211

-------------Round number: 2-------------

Evaluate global model
Averaged Train Loss: 1.3898
Averaged Test Accurancy: 0.3710
Averaged Test AUC: 0.7128
Std Test Accurancy: 0.0798
Std Test AUC: 0.0423
------------------------- time cost ------------------------- 78.45337247848511

-------------Round number: 3-------------

Evaluate global model
Averaged Train Loss: 1.3860
Averaged Test Accurancy: 0.3849
Averaged Test AUC: 0.7209
Std Test Accurancy: 0.0841
Std Test AUC: 0.0427
------------------------- time cost ------------------------- 79.40500593185425

-------------Round number: 4-------------

Evaluate global model
Averaged Train Loss: 1.3728
Averaged Test Accurancy: 0.3907
Averaged Test AUC: 0.7272
Std Test Accurancy: 0.0850
Std Test AUC: 0.0424
------------------------- time cost ------------------------- 80.3697760105133

-------------Round number: 5-------------

Evaluate global model
Averaged Train Loss: 1.3626
Averaged Test Accurancy: 0.3712
Averaged Test AUC: 0.7231
Std Test Accurancy: 0.0801
Std Test AUC: 0.0408
------------------------- time cost ------------------------- 79.92430925369263

-------------Round number: 6-------------

Evaluate global model
Averaged Train Loss: 1.3434
Averaged Test Accurancy: 0.4013
Averaged Test AUC: 0.7346
Std Test Accurancy: 0.0826
Std Test AUC: 0.0424
------------------------- time cost ------------------------- 79.70330309867859

-------------Round number: 7-------------

Evaluate global model
Averaged Train Loss: 1.3393
Averaged Test Accurancy: 0.4065
Averaged Test AUC: 0.7383
Std Test Accurancy: 0.0842
Std Test AUC: 0.0414
------------------------- time cost ------------------------- 79.36297726631165

-------------Round number: 8-------------

Evaluate global model
Averaged Train Loss: 1.3392
Averaged Test Accurancy: 0.4051
Averaged Test AUC: 0.7400
Std Test Accurancy: 0.0711
Std Test AUC: 0.0400
------------------------- time cost ------------------------- 81.42531728744507

-------------Round number: 9-------------

Evaluate global model
Averaged Train Loss: 1.3231
Averaged Test Accurancy: 0.4225
Averaged Test AUC: 0.7481
Std Test Accurancy: 0.0828
Std Test AUC: 0.0408
------------------------- time cost ------------------------- 79.50617814064026

Best global accuracy.
0.42248882615855093

Average time cost per round.
79.6039760907491
File path: ../results/brain_FedAvg_resnet_gr10_ls1_bs24_lr0.005.h5

Average time cost: 859.18s.
Length:  10
std for best accurancy: 0.0
mean for best accurancy: 0.42248882615855093
All done!

Storage on cuda:0
-------------------------------------------------------------------------------
Total Tensors: 1867887099 	Used Memory: 6.96G
The allocated memory on cuda:0: 7.10G
Memory differs due to the matrix alignment or invisible gradient buffer tensors
-------------------------------------------------------------------------------
